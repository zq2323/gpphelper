##  help insert                                                             ----
# one row below and jumps another row down
#' help insert
#'
#' A helper function to insert text
#' @param x An object to insert
#' @param start_row the start row of the insertion
#' @param start_indention The start position within the row
#' @param start_indention_margin A margin (i.e. spaces) that will be added
#'   at the target row before \code{x} is inserted.
#' @param end_row the row where the cursor should be after the insertion
#' @param end_indention The end position within the row
#' @importFrom rstudioapi insertText getActiveDocumentContext setCursorPosition
#' @keywords internal
help_insert <- function(x,
                        start_row = 1,
                        start_indention = Inf,
                        start_indention_margin = 0,
                        end_row = 2,
                        end_indention = Inf) {
    # get the row where the cursor is
    current_row <- getActiveDocumentContext()$selection[[1]]$range$start[1]
    # set the cursor to the very left of that row
    setCursorPosition(c(current_row, Inf))

    # insert end_row line breaks
    insertText(paste(rep("\n", end_row), collapse = ""))

    # insert the margin at the target row
    insertText(c(current_row  + start_row, start_indention),
               paste(rep(" ", start_indention_margin), collapse = ""))


    # insert the separator at the beginning of the new line, so \n gets
    # shifted down one
    insertText(c(current_row  + start_row, start_indention), x)
    # move the cursor one line down
    setCursorPosition(c(current_row + end_row, end_indention), id = NULL)

}


#' insert template header before current program
#'
#' @param .header_config a file path to import the template header
#' @importFrom rstudioapi insertText getActiveDocumentContext setCursorPosition
#' @importFrom purrr map
#' @keywords internal
help_insert_header <- function(.header_config = NULL){
    if(!is.null(.header_config)){
        template_header <- readLines(system.file(.header_config, package = "gpphelper"))
    }else{
        template_header <- readLines(system.file('template/header.txt', package = "gpphelper"))
    }

    template_header <- c(template_header, " ")
    pos <- Map(c, 1:length(template_header), 1)

    headers <- purrr::map(pos, \(x) rstudioapi::insertText(list(x), paste0(template_header[x[1]], "\n")))
    rstudioapi::setCursorPosition(c(length(template_header), Inf))

    return(headers)
}
